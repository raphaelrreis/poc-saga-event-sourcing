version: "3.7"

services:

    mongo:
        image: mongo:4.2
        hostname: mongo
        container_name: mongo
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_DATABASE: saga
            MONGO_INITDB_ROOT_USERNAME: user
            MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
            - ./scripts/init.js:/docker-entrypoint-initdb.d/init.js:ro
        command: mongod --replSet rs0 --auth
        healthcheck:
            test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u user -p password --quiet) -eq 1
            interval: 10s
            start_period: 30s
        networks:
            bubble:

    mysql:
        image: mysql:5.7
        hostname: mysql
        container_name: mysql
        restart: always
        ports:
            - "3306:3306"
        volumes:
            - ./scripts/my-custom.cnf:/etc/mysql/conf.d/my-custom.cnf:ro
        environment:
            MYSQL_DATABASE: cozinha
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        networks:
            bubble:

    zookeeper:
        image: zookeeper:3.5
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
            ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok
        networks:
            bubble:

    kafka:
        image: confluentinc/cp-server:5.4.1
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "29092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            KAFKA_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            KAFKA_STATUS_STORAGE_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
            CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: 'true'
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        networks:
            bubble:

    debezium-connect:
        image: mensagem-customizada
        hostname: debezium-connect
        container_name: mensagem-customizada 
        ports:
           - '8083:8083'
        environment:
            GROUP_ID: 1
            CONFIG_STORAGE_TOPIC: debezium_connect_config
            OFFSET_STORAGE_TOPIC: debezium_connect_offsets
            STATUS_STORAGE_TOPIC: debezium_connect_status
            BOOTSTRAP_SERVERS: kafka:29092
        depends_on:
           - kafka
           - mongo
           - mysql
        networks:
            bubble:

    kafdrop:
        image: obsidiandynamics/kafdrop:latest
        container_name: kafdrop
        ports:
            - '19000:9000'
        depends_on:
            - kafka
        environment:
            KAFKA_BROKERCONNECT: kafka:29092
        networks:
            bubble:

    zipkin-server:
        image: openzipkin/zipkin
        hostname: zipkin
        container_name: zipkin 
        ports:
           - '9411:9411'
        environment:
            KAFKA_BOOTSTRAP_SERVERS: kafka:29092
        depends_on:
           - kafka
        networks:
            bubble:

    # jaeger-server:
    #     image: jaegertracing/all-in-one:1.35
    #     hostname: jaeger
    #     container_name: jaeger
    #     ports:
    #        - '6831:6831/udp'
    #        - '6832:6832/udp'
    #        - '5778:5778'
    #        - '16686:16686'
    #        - '4317:4317'
    #        - '4318:4318'
    #        - '14250:14250'
    #        - '14268:14268'
    #        - '14269:14269'
    #        - '9411:9411'
    #     environment:
    #         COLLECTOR_ZIPKIN_HOST_PORT: 9411
    #         COLLECTOR_OTLP_ENABLED: 'true'
    #     depends_on:
    #        - kafka
    #        - mongo
    #     networks:
    #         bubble:

networks:
    bubble:
        name: bubble
        driver: bridge
        ipam:
            config:
                -   subnet: 10.0.0.0/16
